#----------------------------------------------------------------------------
#  Copyright (c) 2018 WSO2, Inc. http://www.wso2.org
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#----------------------------------------------------------------------------
---
  - block:
    # Set installation directory information
    - name: Installation Information
      set_fact:
        product_dir: "{{ target }}/is"
        carbon_home: "{{ target }}/is/{{ product_name }}-{{ product_version }}"

    - name: Copy the tenants
      unarchive:
        src: "{{ product_package_location }}/tenants/tenants.zip"
        dest: "{{ product_dir }}/{{ product_name }}-{{ product_version }}/repository"
        mode: u=rw,g=r,o=r

    - name: Analyzing the directories to delete...
      find:
        paths: "{{ product_dir }}/{{ product_name }}-{{ product_version }}/repository/tenants"
        recurse: yes
        patterns: "(eventpublishers|eventstreams)"
        use_regex: yes
        file_type: directory
      register: folders_to_delete

    - name: Displaying the result...
      debug:
        var: folders_to_delete

    - name: Deleting the eventpublishers and eventstreams directories...
      file:
        path: "{{ item.path }}"
        state: absent
      with_items: "{{ folders_to_delete.files }}"
      become: yes
# Enable customization by uncommenting the following and adding the changes to the custom.yml
    # - import_tasks: custom.yml
    - import_tasks: migration.yml

    when: "(inventory_hostname in groups['is'])"
    become: true
    become_method: sudo
    become_user: root

#  - block:
#      - name: Start wso2-is as a service
#        systemd:
#          name: wso2is
#          state: started
#          daemon_reload: yes
#
#    become: true
#    become_user: root

  - block:
      - name: Start wso2-is as a service
        systemd:
          name: wso2is
          state: started
          daemon_reload: yes

      - name: Waits for port 9443 of any local IP , don't start checking for 90 seconds
        wait_for:
          host: 0.0.0.0
          port: 9443
          delay: 90
          state: drained

    become: true
    become_user: root