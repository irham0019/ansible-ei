#----------------------------------------------------------------------------
#  Copyright (c) 2018 WSO2, Inc. http://www.wso2.org
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#----------------------------------------------------------------------------
---
  - block:

    - name: Installation Information
      set_fact:
        product_dir: "{{ target }}/ei"
        carbon_home: "{{ target }}/ei/{{ product_name }}-{{ product_version }}"
        micro_integrator_home: "{{ target }}/ei/{{ product_name }}-{{ product_version }}/micro-integrator"
        micro_integrator_dashboard_home: "{{ target }}/ei/{{ product_name }}-{{ product_version }}/micro-integrator-dashboard"

    - name: Create Java directory
      file:
        path: "{{ java_home }}"
        state: directory
        mode: '0755'

    - name: Stop wso2ei as a service
      systemd:
        name: wso2ei
        state: stopped
      ignore_errors: yes

    - name: Waiting for stack to Deploy...
      shell: '{{ micro_integrator_home }}/bin/wso2update_linux --username {{ sub_username }} --password {{ sub_password }}'
      register: waiting_for_stack
      until: waiting_for_stack.stdout.find("updated successfully") or waiting_for_stack.stdout.find("is the latest update level available for the product")!= -1
      retries: 10
      delay: 3

    - name: Waiting for stack to Deploy...
      become: true
      become_user: '{{ wso2_user }}'
      shell: '{{ micro_integrator_dashboard_home }}/bin/wso2update_linux --username {{ sub_username }} --password {{ sub_password }}'
      register: waiting_for_stack
      until: waiting_for_stack.stdout.find("updated successfully") or waiting_for_stack.stdout.find("is the latest update level available for the product")!= -1
      retries: 10
      delay: 3

    - debug: var=waiting_for_stack.stdout_lines

    - name: sleep for 15 seconds and continue with play
      wait_for:
        timeout: 15

    - name: Start wso2-ei as a service
      systemd:
        name: wso2ei
        state: started
        daemon_reload: yes

    become: true
    become_user: root
    when: "(inventory_hostname in groups['ei'])"
    become_method: sudo
