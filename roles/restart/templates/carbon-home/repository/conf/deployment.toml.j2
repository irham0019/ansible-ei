[server]
hostname = "{{ hostname }}"
node_ip = "127.0.0.1"
base_path = "https://$ref{server.hostname}:${carbon.management.port}"
offset = {{ port_offset }}
force_local_cache = true

[system.parameter]
allow_weak_rsa_signer_key=true

[super_admin]
username = "admin@vt.com"
password = "admin"
create_admin_account = true

[tenant_mgt]
enable_email_domain = true

[user_store]
type = "database"
scim_enabled = true
TenantManager="org.wso2.carbon.user.core.tenant.JDBCTenantManager"
ReadOnly=false
ReadGroups=true
WriteGroups=true
username_java_reg_ex_violation_error_msg = "Username pattern policy violated with provided username"
password_java_regex_violation_error_msg = "Password length should be within 5 to 200 characters"
CaseInsensitiveUsername=false
SCIMEnabled=true
IsBulkImportSupported=false
PasswordDigest="SHA-256"
StoreSaltedPassword=true
MultiAttributeSeparator=","
MaxUserNameListLength="100"
MaxRoleNameListLength="100"
UserRolesCacheEnabled=true
UserNameUniqueAcrossTenants=false
password_java_regex='^[\S]{1,200}$'
password_java_script_regex='^[\S]{1,200}$'
LeadingOrTrailingSpaceAllowedInUserName=false
username_java_script_regex = '^[a-zA-Z0-9.-@]{2,200}$'
username_java_regex = '^[a-zA-Z0-9.-@]{5,200}'

[database.identity_db]
type = "{{ wso2is_identity_db_type }}"
url = "{{ wso2is_identity_db_url }}"
username = "{{ wso2is_identity_db_username }}"
password = "{{ wso2is_identity_db_password }}"
driver = "{{ wso2is_identity_db_driver }}"

[database.identity_db.pool_options]
validationQuery = "{{ wso2is_identity_db_validation_query }}"

[database.shared_db]
type = "{{ wso2is_shared_db_type }}"
url = "{{ wso2is_shared_db_url }}"
username = "{{ wso2is_shared_db_username }}"
password = "{{ wso2is_shared_db_password }}"
driver = "{{ wso2is_shared_db_driver }}"
[database.shared_db.pool_options]
validationQuery = "{{ wso2is_shared_db_validation_query }}"

[database.user]
url = "{{ wso2is_user_db_url }}"
username = "{{ wso2is_user_db_username }}"
password = "{{ wso2is_user_db_password }}"
driver = "{{ wso2is_user_db_driver }}"

[realm_manager]
data_source = "WSO2USER_DB"

[keystore.primary]
file_name = "{{ keystore_location }}"
type = "{{ keystore_type }}"
password = "{{ keystore_password }}"
alias = "{{ keystore_key_alias }}"
key_password = "{{ keystore_key_password }}"

[keystore.internal]
file_name = "{{ internal_keystore_location }}"
type = "{{ internal_keystore_type }}"
password = "{{ internal_keystore_password }}"
alias = "{{ internal_keystore_key_alias }}"
key_password = "{{ internal_keystore_key_password }}"

[configuration.store.query_length]
max="4194304"

[event.default_listener.identity_mgt]
priority= "{{ wso2is_priority_identity_mgt_listener }}"
enable = "{{ wso2is_enable_identity_mgt_listener }}"
[event.default_listener.governance_identity_mgt]
priority= "{{ wso2is_priority_governance_identity_mgt_listener }}"
enable = "{{ wso2is_enable_governance_identity_mgt_listener }}"
[event.default_listener.governance_identity_store]
priority= "{{ wso2is_priority_governance_identity_store_listener }}"
enable = "{{ wso2is_enable_governance_identity_store_listener }}"

[truststore]
file_name = "{{ truststore_location }}"
type = "{{ truststore_type }}"
password = "{{ truststore_password }}"

{% if cluster %}
[clustering]
membership_scheme = "wka"
local_member_host = "{{ local_member_host }}"
local_member_port = "{{ local_member_port }}"
members = ["{{ local_member_host }}:{{ local_member_port }}", "{{ member_host }}:{{ member_port }}"]
{% endif %}

[identity_mgt.user_onboarding]
enable_email_verification = true
lock_on_creation=true

[oauth.token_validation]
app_access_token_validity = 604800
user_access_token_validity = 604800
refresh_token_validity = 15552000

[oauth.token_renewal]
renew_refresh_token = false

[oauth.token.validation]
include_validation_context_as_jwt_in_reponse = true
validation_response_jwt_validity = 60

[oauth.oidc.token_validation]
id_token_validity = 604800

[[resource.access_control]]
context="(.*)/api/identity/user/(.*)"
secure="true"
http_method="all"
permissions=["/permission/admin/manage/identity/applicationmgt/delete"]

[[resource.access_control]]
context="(.*)/api/identity/recovery/(.*)"
secure="true"
http_method="all"
permissions=["/permission/admin/manage/identity/applicationmgt/delete"]
